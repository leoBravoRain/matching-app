{"version":3,"sources":["libraries/material-ui/theme.js","libraries/firebase/firebase.js","screens/dashboard/dashboard.screen.js","screens/login/login.screen.js","screens/register/register.screen.js","screens/publicProfile/publicProfile.screen.js","App.js","reportWebVitals.js","index.js"],"names":["createMuiTheme","overrides","MuiButton","root","margin","padding","palette","primary","main","secondary","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fs","firestore","auth","analytics","UserDashboard","props","state","loading","matchesWithUsers","likesFromUsers","signOut","then","catch","error","onAuthStateChanged","user","collection","doc","uid","get","doc_","exists","data","length","matches","where","snapshotquery","forEach","push","console","log","setState","userId","history","Container","style","this","CircularProgress","Paper","elevation","Button","variant","color","onClick","logout","Typography","component","textAlign","map","item","Box","name","window","open","linkToProfile","React","Component","Login","email","password","on_submit","bind","on_register","signInWithEmailAndPassword","res","alert","display","flexDirection","alignContent","justifyContent","TextField","id","label","onChange","e","target","value","type","align","Register","trim","createUserWithEmailAndPassword","newUser","likesToUsers","set","ref","helperText","PublicProfile","userName","userIsLoggedUser","likeToUser","match","params","er","loggedUserRef","likeUserRef","loggedUser","includes","likeUser","add","user1","user2","notified","update","el","document","createElement","location","href","body","appendChild","select","execCommand","removeChild","App","theme","rel","AppBar","position","Toolbar","to","className","gutterBottom","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.817c7f1b.chunk.js","sourcesContent":["// import { createMuiTheme } from 'material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n// import indigo from 'material-ui/colors/indigo';\n// import pink from 'material-ui/colors/pink';\n// import red from 'material-ui/colors/red';\n// import purple from '@material-ui/core/colors/purple';\n// import red from '@material-ui/core/colors/red';\n\n// const primary = red[500]; // #F44336\n// const primary = \"#2a9d8f\";\nconst primary = \"#4361EE\";\n\n// const accent = purple['A200']; // #E040FB\n// const accent = \"#e76f51\";\nconst accent = \"#66FBD1\";\n// const accent = purple.A200; // #E040FB (alternative method)\n\nexport default createMuiTheme({\n    overrides: {\n        MuiButton: {\n            root: {\n                margin: \"10px\",\n                padding: \"10px\"\n            }\n        }\n    },\n\n    palette: {\n        primary: {\n            main: primary\n        },\n        secondary: {\n            main: accent\n        } // Indigo is probably a good match with pink\n    }\n});\n\n// import {cyan500, deepPurple500} from 'material-ui/colors';\n// // import getMuiTheme from 'material-ui/styles/getMuiTheme'; \n// import { getMuiTheme } from 'material-ui/styles';\n\n// export default theme = getMuiTheme({\n//   palette: {\n//     textColor: cyan500\n//   },\n//   appBar: {\n//     height: 50\n//   }\n// });\n\n// export default theme;","import firebase from \"firebase\";\n\n// API credentials\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBhNGtVFx1xv5gcttMEoELyH-Dmevhuu3g\",\n    authDomain: \"matchingapp-a4647.firebaseapp.com\",\n    projectId: \"matchingapp-a4647\",\n    storageBucket: \"matchingapp-a4647.appspot.com\",\n    messagingSenderId: \"1024906637874\",\n    appId: \"1:1024906637874:web:32d49c97a58af611a5422b\"\n};\n\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\n\n// export const auth = firebase.auth();\nexport const fs = app.firestore();\nexport const auth = app.auth();\nfirebase.analytics();\n// export const st = app.storage();\n// export const an = firebase.analytics();\n\n// export const st = app.storage();","import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { Button, Box } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// import LiveTv from '@material-ui/icons/LiveTv';\n\nimport {\n    fs,\n    auth,\n} from \"../../libraries/firebase/firebase\";\n\nimport Person from '@material-ui/icons/Person';\nimport Close from \"@material-ui/icons/Close\";\n\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n// fake data\nconst matchesWithUsers = [\n    {\n        \"userName\": \"Emma Watson\",\n        \"linkToUser\": \"https://www.instagram.com/emmawatson/\",\n    },\n    {\n        \"userName\": \"person 2\",\n        \"linkToUser\": \"https://www.google.com\",\n    },\n];\n\nclass UserDashboard extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: true,\n            matchesWithUsers: [],\n            likesFromUsers: 0,\n            // workshopsByCategory: null,\n            // garbagesPerDay: [],\n            // email: \"\",\n            // password: \"\",\n        }\n\n    }\n\n    logout() {\n        auth.signOut().then(function () {\n            // Sign-out successful.\n        }).catch(function (error) {\n            // An error happened.\n        });\n\n    }\n\n    componentDidMount() {\n\n        // // temp\n        // this.setState({\n        //     loading: false,\n        //     matchesWithUsers: matchesWithUsers,\n        // });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n            if (!user) {\n\n                // console.log(\"user not logged\");\n\n                this.props.history.push('/login');\n\n                // console.log(\"aosjid\");\n\n            }\n\n            else {\n\n                // console.log(\"user: \", user);\n\n                // get number of garbage\n                fs.collection('users').doc(user.uid).\n                    get().then(doc_ => {\n\n                        // console.log(\"doc: \", doc_);\n\n                        // console.log(\"doc_ data(): \", doc_.data());\n\n                        if (doc_.exists) {\n\n                            const likesFromUsers = doc_.data().likesFromUsers.length;\n\n                            var matchesWithUsers = [];\n    \n                            if (doc_.data().matches.length > 0){\n    \n                                // get users data\n                                fs.collection(\"users\")\n                                .where(\"__name__\", \"in\", doc_.data().matches)\n                                .get().then(snapshotquery => {\n        \n                                    // iterate over each item\n                                    snapshotquery.forEach(doc => {\n                                    \n                                        // console.log(\"response: \",doc.data());\n        \n                                        matchesWithUsers.push(doc.data());\n        \n                                    });\n                                    \n                                    console.log(matchesWithUsers);\n    \n                                    // // update state\n                                    this.setState({\n            \n                                        matchesWithUsers: matchesWithUsers,\n                                        likesFromUsers: likesFromUsers,\n                                        loading: false,\n                                        userId: user.uid,\n            \n                                    });\n        \n                                });\n    \n                            }\n                            \n                            // if user does not have matches\n                            else {\n    \n                                // // update state\n                                this.setState({\n                                    likesFromUsers: likesFromUsers,\n                                    loading: false,\n                                    userId: user.uid,\n        \n                                });\n    \n                            }\n\n                        }\n\n                        else {\n\n                            // // update state\n                            this.setState({\n\n                                loading: false,\n                                userId: user.uid,\n\n                            });\n\n                        }\n\n                    });\n\n\n            }\n\n        });\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                }}\n\n                                elevation={5}\n                            >   \n\n                                <Button variant=\"contained\" color=\"primary\"\n                                    onClick={() => this.props.history.push(\"/publicProfile/\" + this.state.userId)}\n                                >\n                                    <Person\n                                        style = {{\n                                            margin: 5,\n                                        }}\n                                    />\n                                    {/* See my public profile */}\n                                    Ver mi perfil público\n                                </Button>\n\n                                <Button variant=\"contained\" color=\"primary\"\n                                    onClick={() => this.logout()}\n                                >\n                                    <Close\n                                        style = {{\n                                            margin: 5,\n                                        }}\n                                    />\n                                    {/* Logout */}\n                                    Cerrar sesión\n                                </Button>\n                                \n                                <Typography>\n                                    Personas que te han dado \"Me gustas\": {this.state.likesFromUsers}\n                                </Typography>\n\n                                <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n\n                                    {/* Your matches */}\n                                    Tus matches\n \n                                </Typography>\n\n                                {/* collection of likes */}\n\n                                {\n                                    this.state.matchesWithUsers.length > 0 ?\n                                        this.state.matchesWithUsers.map((item) => {\n\n                                            return (\n                                                <Box>\n\n                                                    <Typography variant=\"body2\">\n                                                        \n                                                        {item.name} \n\n                                                    </Typography>\n\n                                                    <Typography variant=\"body2\"\n                                                        onClick = {\n                                                            () => {\n                                                                // alert(\"aisod\");\n                                                                // console.log(this);\n                                                                // this.window.props.location.href(item.linkToUser)\n                                                                window.open(item.linkToProfile);\n                                                            }\n                                                        }\n                                                    >\n\n                                                        {/* Let's talk! */}\n                                                        Hablemos!\n\n                                                    </Typography>\n\n                                                    {/* <img\n                                                        width={200}\n                                                        height={200}\n                                                        src={item.image}\n                                                    /> */}\n\n                                                </Box>\n                                            )\n                                        })\n\n                                        :\n\n                                        <Typography>\n                                            <p>\n                                                Aun no tienes matches\n                                            </p>\n\n                                            <p>\n                                                Comparte y difunde tu link de tu perfil público en tus redes sociales, así las personas lo podrán ver!\n                                            </p>\n                                        </Typography>\n                                }\n\n                            </Paper>\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default UserDashboard;","import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport {\n    TextField,\n    Paper,\n    Container,\n    Button,\n    Typography,\n    CircularProgress\n} from '@material-ui/core';\n\n// firebase\nimport {\n    auth,\n} from \"../../libraries/firebase/firebase\";\n\nimport Person from '@material-ui/icons/Person';\nimport DoubleArrow from \"@material-ui/icons/DoubleArrow\";\n\n// import Paper from '@material-ui/core/Paper';\n// import Container from '@material-ui/core/Container';\n// import { Button } from \"@material-ui/core\";\n// import Typography from '@material-ui/core/Typography';\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n// // workshop mockup\n// const _workshops = [\n//     {\n//         \"title\": \"Yoga indio\",\n//         \"teacher\": \"Daniela Parra\",\n//         \"description\": \"Unete a nuestras clases de yoga, para hacer ejercicios y sacarte el estrés que tienes dentro\",\n//         \"image\": \"https://images.yogaanytime.com/2017/12/13/large_sarah_170825_YA13140_content-19948.jpg?width=768\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Deportes\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     },\n\n//     {\n//         \"title\": \"Baile entretenido\",\n//         \"teacher\": \"Rodrigo Días\",\n//         \"description\": \"Unete a nuestras clases unicas de baile entretenido\",\n//         \"image\": \"https://statics-cuidateplus.marca.com/sites/default/files/images/zumba.jpg\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Deportes\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     },\n\n//     {\n//         \"title\": \"Clases de guitarra\",\n//         \"teacher\": \"Rodrigo Valencia\",\n//         \"description\": \"Unete a nuestras clases unicas de guitarra\",\n//         \"image\": \"https://img.fotocommunity.com/guitar-man-ff55a084-e878-4372-a9a0-ee771a3a0fdc.jpg?height=1080\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Musica\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     }\n\n// ];\n\nclass Login extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: false,\n            email: \"\",\n            password: \"\",\n            // workshopsByCategory: null,\n            // email: \"\",\n            // password: \"\",\n        }\n\n        this.on_submit = this.on_submit.bind(this);\n        this.on_register = this.on_register.bind(this);\n\n    }\n\n    on_register() {\n\n        // const email = this.state.email.trim();\n        // const password = this.state.password;\n\n        // temporal\n        this.props.history.push('/register');\n\n        // auth.createUserWithEmailAndPassword(email, password)\n\n        //     .then(res => {\n        //         alert(\"Registered successfully!\");\n\n        //         this.props.history.push('/home');\n\n        //     })\n        //     .catch(e => {\n        //         alert(e);\n        //     })\n    }\n\n    // onsubmit form\n    on_submit() {\n\n        const email = this.state.email;\n        const password = this.state.password;\n        \n        // console.log(this);\n        auth.signInWithEmailAndPassword(email, password)\n\n            .then(res => {\n\n                // console.log(\"user logged!\");\n\n                this.props.history.push('/');\n\n            })\n\n            .catch(function (error) {\n\n                // console.log(error.code);\n\n                // alert('Ups, the data is not correct! Try it again!');\n                alert(\"Ups, la información es incorrecta! Intentalo de nuevo!\");\n\n            });\n    }\n\n    componentDidMount() {\n\n        // // check if user is logged\n        // auth.onAuthStateChanged((user) => {\n\n        //     if (user) {\n\n        //         // console.log(\"user logged\");\n\n        //         this.props.history.push('/home');\n\n        //     }\n\n        //     else {\n\n        //         // console.log(\"user no logged\");\n\n        //         // this.props.history.push('/login/');\n        //     }\n\n        // });\n\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignContent: \"center\",\n                                    justifyContent: \"center\",\n                                    textAlign: \"center\",\n                                }}\n\n                                elevation={5}\n                            >\n\n                                <Typography variant=\"h6\" component=\"h6\">\n\n                                    Bienvenido a LikeMe\n\n                                </Typography>\n\n                                <Typography variant=\"body2\" component=\"p\">\n\n                                    {/* In here you can match with people you know! It is not a marketplace of people, it is just a way to match with people you know previously! */}\n                                    <p>\n                                        Aquí puedes darle like a la persona que te gusta, y si ella también te da like, entonces harán match! Si la otra persona no te da like, ella NUNCA sabrá que le diste like! Asi que no te preocupes si no hacen match! Ella nunca sabrá!\n                                    </p> \n                                    \n                                    <p>\n                                        Esto NO es como Tinder, ya que no hay un marketplace de personas! Acá solo le puedes dar like al link de esta persona, no encontrarás mas personas! Esto es mas personal!\n                                    </p>\n\n                                    <p>\n                                        Puedes pegar el link de tu perfil publico de esta página en tu Instagram, Whatsapp, Facebook, Tiktok o donde quieras!\n                                    </p>\n\n                                </Typography>\n\n                                <Typography variant=\"h5\" component=\"h5\">\n                                    Ingresar\n                                </Typography>\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label=\"Email\"\n                                    margin=\"normal\"\n                                    onChange={(e) => this.setState({ email: e.target.value })}\n                                    value={this.state.email}\n                                />\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label=\"Contraseña\"\n                                    type=\"password\"\n                                    // defaultValue=\"Correo electrónico\"\n                                    margin=\"normal\"\n                                    onChange={(e) => this.setState({ password: e.target.value })}\n                                    value={this.state.password}\n                                />\n\n                                {/* login */}\n                                <Button align=\"center\" variant=\"contained\" color=\"primary\" onClick={this.on_submit}>\n                                    <DoubleArrow\n                                        style = {{\n                                            margin: 5,\n                                        }}\n                                    />\n                                    Ingresar\n                                </Button>\n\n                                {/* register */}\n                                <Button align=\"center\" variant=\"contained\" color=\"secondary\" onClick={this.on_register}>\n                                    <Person\n                                        style = {{\n                                            margin: 5,\n                                        }}\n                                    />\n                                    Registrarme\n                                </Button>\n\n                            </Paper>\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default Login;","import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport {\n    TextField,\n    Paper,\n    Container,\n    Button,\n    Typography,\n    CircularProgress\n} from '@material-ui/core';\n\n// firebase\nimport {\n    auth,\n    fs,\n} from \"../../libraries/firebase/firebase\";\n\n// import Paper from '@material-ui/core/Paper';\n// import Container from '@material-ui/core/Container';\n// import { Button } from \"@material-ui/core\";\n// import Typography from '@material-ui/core/Typography';\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n// // workshop mockup\n// const _workshops = [\n//     {\n//         \"title\": \"Yoga indio\",\n//         \"teacher\": \"Daniela Parra\",\n//         \"description\": \"Unete a nuestras clases de yoga, para hacer ejercicios y sacarte el estrés que tienes dentro\",\n//         \"image\": \"https://images.yogaanytime.com/2017/12/13/large_sarah_170825_YA13140_content-19948.jpg?width=768\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Deportes\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     },\n\n//     {\n//         \"title\": \"Baile entretenido\",\n//         \"teacher\": \"Rodrigo Días\",\n//         \"description\": \"Unete a nuestras clases unicas de baile entretenido\",\n//         \"image\": \"https://statics-cuidateplus.marca.com/sites/default/files/images/zumba.jpg\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Deportes\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     },\n\n//     {\n//         \"title\": \"Clases de guitarra\",\n//         \"teacher\": \"Rodrigo Valencia\",\n//         \"description\": \"Unete a nuestras clases unicas de guitarra\",\n//         \"image\": \"https://img.fotocommunity.com/guitar-man-ff55a084-e878-4372-a9a0-ee771a3a0fdc.jpg?height=1080\",\n//         \"teacherMobileNumber\": \"+56937827142\",\n//         \"category\": \"Musica\",\n//         \"schedule\": [\n//             \"Lunes 8:00 a 9:30\",\n//             \"Miercoles 8:00 a 9:30\",\n//         ]\n//     }\n\n// ];\n\nclass Register extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: false,\n            email: \"\",\n            password: \"\",\n            // workshopsByCategory: null,\n            // email: \"\",\n            // password: \"\",\n        }\n\n        this.on_register = this.on_register.bind(this);\n\n    }\n\n    on_register() {\n\n        const email = this.state.email.trim();\n        const password = this.state.password;\n\n        auth.createUserWithEmailAndPassword(email, password)\n\n            .then(res => {\n\n                console.log(res.user.uid);\n\n                // create new user in database\n                const newUser = {\n                    email: email,\n                    name: this.state.name,\n                    linkToProfile: this.state.linkToProfile,\n                    likesToUsers: [],\n                    likesFromUsers: [],\n                    matches: [],\n                };\n\n                // create new user \n                fs.collection('users').doc(res.user.uid).set(newUser).then(ref => {\n\n                    // console.log(\"Added document with ID: \", ref.id)\n\n                    // alert(\"Registered successfully!\");\n                    alert(\"Registro exitoso\");\n\n                    this.props.history.push('/');\n\n                });\n                \n\n            })\n            .catch(e => {\n                alert(e);\n            })\n    }\n\n    componentDidMount() {\n\n        // // check if user is logged\n        // auth.onAuthStateChanged((user) => {\n\n        //     if (user) {\n\n        //         // console.log(\"user logged\");\n\n        //         this.props.history.push('/home');\n\n        //     }\n\n        //     else {\n\n        //         // console.log(\"user no logged\");\n\n        //         // this.props.history.push('/login/');\n        //     }\n\n        // });\n\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                }}\n\n                                elevation={5}\n                            >\n\n                                <Typography variant=\"h6\" component=\"h6\">\n\n                                    Registrate\n\n                                </Typography>\n\n                                <Typography variant=\"body2\" component=\"p\">\n\n                                    Ingresa tu información\n\n                                </Typography>\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label = \"Nombre\"\n                                    margin=\"normal\"\n                                    onChange={(e) => this.setState({ name: e.target.value })}\n                                    value={this.state.name}\n                                />\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label=\"Link a un perfil que uses normalmente\"\n                                    margin=\"normal\"\n                                    helperText = \"Puede ser el link a tu Instagram o Whatsapp, ya que si haces match, la persona te hablará a este perfil\"\n                                    onChange={(e) => this.setState({ linkToProfile: e.target.value })}\n                                    value={this.state.linkToProfile}\n                                />\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label=\"Email\"\n                                    margin=\"normal\"\n                                    onChange={(e) => this.setState({ email: e.target.value })}\n                                    value={this.state.email}\n                                />\n\n                                <TextField\n                                    id=\"standard-uncontrolled\"\n                                    label=\"Contraseña para esta plataforma\"\n                                    type=\"password\"\n                                    // defaultValue=\"Correo electrónico\"\n                                    margin=\"normal\"\n                                    onChange={(e) => this.setState({ password: e.target.value })}\n                                    value={this.state.password}\n                                />\n\n\n                                {/* register */}\n                                <Button align=\"center\" variant=\"contained\" color=\"secondary\" onClick={this.on_register}>\n                                    Registrar\n                                </Button>\n\n                            </Paper>\n\n                            {/* box to message of register\n                            <Paper\n                                style = {{\n                                    display: \"flex\",\n                                    flexDirection: \"column\"\n                                }}\n                            >\n                                We are currently testing this tool to keep track of your help to get a better world! If you want to register, please type your email in the next form and we will send you more information!\n\n                                <Button\n                                    align=\"center\" variant=\"contained\" color=\"primary\"\n                                    onClick = {() => {\n\n                                        // redirect\n                                        window.location.replace(\"https://forms.gle/1aVeXmFEzNE7b2Sv8\");\n                                    }}\n                                >\n                                    Request access to #OneGarbagePerDay\n                                </Button>\n                            </Paper> */}\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default Register;","import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { Button, Box } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Person from '@material-ui/icons/Person';\nimport FileCopy from '@material-ui/icons/FileCopy';\n\nimport {\n    fs,\n    auth,\n} from \"../../libraries/firebase/firebase\";\n\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n\nclass PublicProfile extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: true,\n            userName: \"\",\n            userIsLoggedUser: false,\n            // workshopsByCategory: null,\n            // garbagesPerDay: [],\n            // email: \"\",\n            // password: \"\",\n        }\n        \n        this.likeToUser = this.likeToUser.bind(this);\n\n    }\n\n    componentDidMount() {\n        \n        // get user name\n        fs.collection('users').doc(this.props.match.params.userId)\n        .get().then(doc => {\n            \n            // console.log(\"getting user name\");\n            // console.log(doc.data());\n\n            this.setState({\n                loading: false,\n                userName: doc.exists ? doc.data().name : \"\",\n            });\n            \n        })\n        .catch(er => {\n            console.log(er);\n        });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n           if (user){\n\n                // if like user is different from logged user\n                if (user.uid == this.props.match.params.userId) {\n\n                    this.setState({\n                        userIsLoggedUser: true,\n                    })\n                }\n\n            }\n\n        });\n\n    }\n    \n    likeToUser() {\n        \n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n            \n            if (!user) {\n                \n                console.log(\"user not logged\");\n                \n                // alert(\"You need an account (and login in) in our platform in order to 'give likes'\");\n                alert(\"Necesitas una cuenta en nuestra plataforma para poder dar y recibir likes de otras personas!\");\n                \n                // this.props.history.push('/');\n                \n                // console.log(\"aosjid\");\n                \n            }\n            \n            else {\n                \n                // if like user is different from logged user\n                if (user.uid != this.props.match.params.userId) {\n\n                    const loggedUserRef = fs.collection(\"users\").doc(user.uid);\n                    const likeUserRef = fs.collection(\"users\").doc(this.props.match.params.userId);\n                    \n                    // get logged user\n                    loggedUserRef.get()\n                    .then(doc_ => {\n                        \n                        var loggedUser = doc_.data();\n                        loggedUser[\"id\"] = doc_.id;\n                        \n                        // check if like already exists\n                        // if it does not exists\n                        if (!loggedUser.likesToUsers.includes(this.props.match.params.userId)) {\n                            \n                            // add like to like user\n                            loggedUser.likesToUsers.push(this.props.match.params.userId);\n                            \n                            // get user to give like\n                            likeUserRef.get()\n                            .then(doc => {\n                                \n                                var likeUser = doc.data();\n                                likeUser[\"id\"] = doc.id;\n                                \n                                // update likes of like user\n                                if (!likeUser.likesFromUsers.includes(loggedUser.id)) {\n                                    likeUser.likesFromUsers.push(loggedUser.id);\n                                };\n                                \n                                // check if match already exists\n                                if (likeUser.matches.includes(loggedUser.id) & loggedUser.matches.includes(likeUser.id)) {\n                                    \n                                    // alert(\"You already did match! Check your profile in order to start to speak!\");\n                                    alert(\"Ya hicieron match! Anda a tu perfil y comienza a hablar con esta persona!\");\n                                    \n                                }\n                                \n                                // if match does not exist yet\n                                else {\n                                    \n                                    // check if users are both with likes (match)\n                                    if (likeUser.likesToUsers.includes(loggedUser.id) & loggedUser.likesToUsers.includes(likeUser.id)) {\n                                        // console.log(\"match\");\n                                        \n                                        // create match\n                                        likeUser.matches.push(loggedUser.id);\n                                        loggedUser.matches.push(likeUser.id);\n                                        \n                                        // user message\n                                        // alert(\"Congratulations! You did match! Go to your profile and start talking!\");\n                                        alert(\"Felicitaciones! Acabas de hacer match con esta persona! Anda a tu perfil para poder comenzar a hablar!\");\n                                        \n                                        // create notification in DB\n                                        fs.collection(\"matches\").add({\n\n                                            user1: likeUser.id,\n                                            user2: loggedUser.id,\n                                            notified: false,\n                                            // date: fs.FieldValue.serverTimestamp(),\n\n                                        }).then(res => {\n\n                                            // console.log(\"new notification\")\n\n                                            \n                                        });\n                                        \n                                    }\n                                    \n                                    // do not match yet\n                                    else {\n                                        \n                                        // usre message\n                                        // alert(\"Your like was saved, now you have to wait if the other person gives you like too! Good luck!\");\n                                        alert(\"Tu like fue guardado, ahora debes esperar a que la otra persona te de like también! Buena suerte!\");\n                                        // console.log(\"other person don't like you\");\n                                        \n                                    };\n                                    \n                                    \n                                };\n                                \n                                // update users on BD\n                                // console.log(\"logged user updated: \", loggedUser);\n                                // console.log(\"like user updated: \", likeUser);\n\n                                // update logged user\n                                loggedUserRef.update(loggedUser)\n                                .then(res => {\n                                    console.log(\"logged user updated successfully\");\n                                })\n                                .catch(er => {\n                                    console.log(er);\n                                });\n                                \n                                // update like user\n                                likeUserRef.update(likeUser)\n                                .then(res => {\n                                    console.log(\"like user updated successfully\");\n                                })\n                                .catch(er => {\n                                    console.log(er);\n                                });\n                                \n                            });\n                            \n                        }\n                        \n                        // if like already exists\n                        else{\n                            // alert(\"You already liked this person. Must to wait until other person give you like!\");\n                            alert(\"Ya le diste like a esta persona! Ahora debes esperar a que te de like! Buena suerte!\");\n                        };\n                        \n                    });\n                    \n                }\n\n                // it's the same user\n                else {\n                    // alert(\"You can not do like to yourself\");\n                    alert(\"Ups! No puedes darte like a ti mismo!\");\n                };\n\n            };\n\n        });\n\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"center\"\n                                }}\n\n                                elevation={5}\n                            >\n\n                                <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n\n                                    Hola soy {this.state.userName}!\n\n                                </Typography>\n\n                                <Typography variant=\"p\" component=\"body2\" style={{ textAlign: \"center\", }}>\n\n                                    {/* You can give me \"like me\" if I like to you :) If I gave you like too, so we will do match :) and we will be notified, otherwise I will never know you gave me like :), so don't worry about it! */}\n                                    <p>\n                                        Puedes darme \"me gusta\" si es que te gusto :) y si yo también te doy \"me gustas\", entonces haremos match y podremos hablar! \n                                    </p>\n                                    <p>\n                                        Si es que no te doy \"me gustas\", yo nunca sabré que me diste \"me gustas\"! Asi que no te preocupes, nadie sabrá! Solo tú!\n                                    </p> \n\n                                </Typography>\n\n                                {/* like button */}\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\"\n                                    onClick={() => {\n                                        // alert(\"If I give you like too, we will do match, otherwise I will never know you gave me like :)\")\n                                        this.likeToUser();\n                                    }}\n                                >\n                                    <FavoriteBorder\n                                        // margin = {50}\n                                        style = {{\n                                            margin: 4,\n                                        }}\n                                    />\n                                    Me gustas\n                                </Button>\n\n                                <Typography variant=\"p\" component=\"body2\" style={{ textAlign: \"center\", }}>\n\n                                    {/* If you are not logged, click here: */}\n                                    Si no estas registrado, click aquí\n\n                                </Typography>\n                                \n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => {\n                                        // alert(\"Go to register\");\n                                        // this.s\n                                        this.props.history.push('/login');\n                                    }}\n                                >\n                                    <Person\n                                        // margin = {50}\n                                        style={{\n                                            margin: 4,\n                                        }}\n                                    />\n                                    {/* Sign in */}\n                                    Registrarse\n                                </Button>\n\n                                \n                                {\n                                    this.state.userIsLoggedUser &&\n\n                                    <Container\n                                        style={{\n                                            justifyContent: \"center\",\n                                            flexDirection: \"column\",\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n\n                                        <p>\n                                            Este botón solo lo puedes ver tú\n                                        </p>\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => {\n\n                                                // copy link to clipboard\n                                                const el = document.createElement('textarea');\n                                                el.value = window.location.href;\n                                                document.body.appendChild(el);\n                                                el.select();\n                                                document.execCommand('copy');\n                                                document.body.removeChild(el);\n\n                                                // user message\n                                                alert(\"Link copiado!\");\n\n                                            }}\n                                        >\n                                            <FileCopy\n                                                // margin = {50}\n                                                style={{\n                                                    margin: 4,\n                                                }}\n                                            />\n\n                                            Copiar este link en mis redes sociales\n\n                                        </Button>\n                                    </Container>\n                                }\n\n                            </Paper>\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default PublicProfile;","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// import Home from \"./screens/home.screen\";\n// import Login from \"./screens/login.screen\";\n\n// Material ui\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Info from '@material-ui/icons/Info';\n// import Add from \"@material-ui/icons/Add\";\n// import MailOutline from \"@material-ui/icons/MailOutline\";\n\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import { MuiThemeProvider } from '@material-ui/core/styles';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './libraries/material-ui/theme';\n\n// screens\nimport UserDashboard from \"./screens/dashboard/dashboard.screen\";\nimport Login from \"./screens/login/login.screen\";\nimport Register from \"./screens/register/register.screen\";\nimport PublicProfile from \"./screens/publicProfile/publicProfile.screen\";\n// import Prizes from \"./screens/prizes/prizes.screen\";\n\n// import WorkshopDetails from \"./screens/workshopDetails/workshopDetails.screen\";\n\n// import Login from \"./screens/login/login.screen\";\n// import Register from \"./screens/register/register.screen\";\n// import TeacherHome from \"./screens/teacherHome/teacherHome.screen\";\n// import EditCourse from \"./screens/editCourse/editCourse.screen\";\n\n// // ifrebase\n// import { auth } from \"./config/firebase\";\n\n\n// Component \nclass App extends Component {\n\n\n  // // logout from admin page\n  // on_logout() {\n\n  //   // logout\n  //   auth.signOut().then(res => {\n\n  //     alert(\"Your session has been closed\");\n\n  //   }).catch(error => {\n\n  //     console.log(error);\n\n  //   });\n\n  // }\n\n  // render method\n  render() {\n\n    return (\n\n      <MuiThemeProvider theme={theme}>\n\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\n        <Router>\n\n          <AppBar position=\"static\">\n\n            <Toolbar>\n\n              {/* to home */}\n              <Link to=\"/\" className=\"nav-link\" style={{ \"flex\": 1, \"color\": \"white\", \"textDecoration\": \"none\" }}>\n\n                <Typography gutterBottom variant=\"h4\" component=\"h2\">\n\n                  <FavoriteBorder\n                    style = {{\n                      margin: 4,\n                    }}\n                  />\n                  LikeMe\n\n                </Typography>\n\n              </Link>\n\n            </Toolbar>\n\n          </AppBar>\n\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <Route path=\"/\" exact component={UserDashboard} />\n          <Route path=\"/publicProfile/:userId\" component={PublicProfile} />\n          {/* <Route path=\"/prizes\" exact component={Prizes} /> */}\n\n          {/* <Route path=\"/workshopDetails\" exact component={WorkshopDetails} /> */}\n\n        </Router>\n\n      </MuiThemeProvider>\n\n    );\n\n  }\n\n}\n\n// exporting app\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}