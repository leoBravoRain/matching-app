[{"/home/leo/Desktop/matchingApp/matching-app/src/App.js":"1","/home/leo/Desktop/matchingApp/matching-app/src/reportWebVitals.js":"2","/home/leo/Desktop/matchingApp/matching-app/src/libraries/material-ui/theme.js":"3","/home/leo/Desktop/matchingApp/matching-app/src/screens/dashboard/dashboard.screen.js":"4","/home/leo/Desktop/matchingApp/matching-app/src/screens/login/login.screen.js":"5","/home/leo/Desktop/matchingApp/matching-app/src/screens/register/register.screen.js":"6","/home/leo/Desktop/matchingApp/matching-app/src/screens/publicProfile/publicProfile.screen.js":"7","/home/leo/Desktop/matchingApp/matching-app/src/index.js":"8","/home/leo/Desktop/matchingApp/matching-app/src/libraries/firebase/firebase.js":"9"},{"size":3414,"mtime":1607813063860,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607621969515,"results":"12","hashOfConfig":"11"},{"size":1341,"mtime":1607622476627,"results":"13","hashOfConfig":"11"},{"size":10285,"mtime":1607815115493,"results":"14","hashOfConfig":"11"},{"size":9322,"mtime":1607810254738,"results":"15","hashOfConfig":"11"},{"size":9138,"mtime":1607796189722,"results":"16","hashOfConfig":"11"},{"size":16407,"mtime":1607813461120,"results":"17","hashOfConfig":"11"},{"size":500,"mtime":1607621969515,"results":"18","hashOfConfig":"11"},{"size":670,"mtime":1607629891115,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iwclkd",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leo/Desktop/matchingApp/matching-app/src/App.js",[],"/home/leo/Desktop/matchingApp/matching-app/src/reportWebVitals.js",[],["41","42"],"/home/leo/Desktop/matchingApp/matching-app/src/libraries/material-ui/theme.js",[],"/home/leo/Desktop/matchingApp/matching-app/src/screens/dashboard/dashboard.screen.js",["43","44"],"/home/leo/Desktop/matchingApp/matching-app/src/screens/login/login.screen.js",[],"/home/leo/Desktop/matchingApp/matching-app/src/screens/register/register.screen.js",[],"/home/leo/Desktop/matchingApp/matching-app/src/screens/publicProfile/publicProfile.screen.js",["45","46","47"],"import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { Button, Box } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport Person from '@material-ui/icons/Person';\nimport FileCopy from '@material-ui/icons/FileCopy';\n\nimport {\n    fs,\n    auth,\n} from \"../../libraries/firebase/firebase\";\n\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n\nclass PublicProfile extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: true,\n            userName: \"\",\n            userIsLoggedUser: false,\n            // workshopsByCategory: null,\n            // garbagesPerDay: [],\n            // email: \"\",\n            // password: \"\",\n        }\n        \n        this.likeToUser = this.likeToUser.bind(this);\n\n    }\n\n    componentDidMount() {\n        \n        // get user name\n        fs.collection('users').doc(this.props.match.params.userId)\n        .get().then(doc => {\n            \n            // console.log(\"getting user name\");\n            // console.log(doc.data());\n\n            this.setState({\n                loading: false,\n                userName: doc.exists ? doc.data().name : \"\",\n            });\n            \n        })\n        .catch(er => {\n            console.log(er);\n        });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n           if (user){\n\n                // if like user is different from logged user\n                if (user.uid == this.props.match.params.userId) {\n\n                    this.setState({\n                        userIsLoggedUser: true,\n                    })\n                }\n\n            }\n\n        });\n\n    }\n    \n    likeToUser() {\n        \n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n            \n            if (!user) {\n                \n                console.log(\"user not logged\");\n                \n                // alert(\"You need an account (and login in) in our platform in order to 'give likes'\");\n                alert(\"Necesitas una cuenta en nuestra plataforma para poder dar y recibir likes de otras personas!\");\n                \n                // this.props.history.push('/');\n                \n                // console.log(\"aosjid\");\n                \n            }\n            \n            else {\n                \n                // if like user is different from logged user\n                if (user.uid != this.props.match.params.userId) {\n\n                    const loggedUserRef = fs.collection(\"users\").doc(user.uid);\n                    const likeUserRef = fs.collection(\"users\").doc(this.props.match.params.userId);\n                    \n                    // get logged user\n                    loggedUserRef.get()\n                    .then(doc_ => {\n                        \n                        var loggedUser = doc_.data();\n                        loggedUser[\"id\"] = doc_.id;\n                        \n                        // check if like already exists\n                        // if it does not exists\n                        if (!loggedUser.likesToUsers.includes(this.props.match.params.userId)) {\n                            \n                            // add like to like user\n                            loggedUser.likesToUsers.push(this.props.match.params.userId);\n                            \n                            // get user to give like\n                            likeUserRef.get()\n                            .then(doc => {\n                                \n                                var likeUser = doc.data();\n                                likeUser[\"id\"] = doc.id;\n                                \n                                // update likes of like user\n                                if (!likeUser.likesFromUsers.includes(loggedUser.id)) {\n                                    likeUser.likesFromUsers.push(loggedUser.id);\n                                };\n                                \n                                // check if match already exists\n                                if (likeUser.matches.includes(loggedUser.id) & loggedUser.matches.includes(likeUser.id)) {\n                                    \n                                    // alert(\"You already did match! Check your profile in order to start to speak!\");\n                                    alert(\"Ya hicieron match! Anda a tu perfil y comienza a hablar con esta persona!\");\n                                    \n                                }\n                                \n                                // if match does not exist yet\n                                else {\n                                    \n                                    // check if users are both with likes (match)\n                                    if (likeUser.likesToUsers.includes(loggedUser.id) & loggedUser.likesToUsers.includes(likeUser.id)) {\n                                        // console.log(\"match\");\n                                        \n                                        // create match\n                                        likeUser.matches.push(loggedUser.id);\n                                        loggedUser.matches.push(likeUser.id);\n                                        \n                                        // user message\n                                        // alert(\"Congratulations! You did match! Go to your profile and start talking!\");\n                                        alert(\"Felicitaciones! Acabas de hacer match con esta persona! Anda a tu perfil para poder comenzar a hablar!\");\n                                        \n                                        // create notification in DB\n                                        fs.collection(\"matches\").add({\n\n                                            user1: likeUser.id,\n                                            user2: loggedUser.id,\n                                            notified: false,\n                                            // date: fs.FieldValue.serverTimestamp(),\n\n                                        }).then(res => {\n\n                                            // console.log(\"new notification\")\n\n                                            \n                                        });\n                                        \n                                    }\n                                    \n                                    // do not match yet\n                                    else {\n                                        \n                                        // usre message\n                                        // alert(\"Your like was saved, now you have to wait if the other person gives you like too! Good luck!\");\n                                        alert(\"Tu like fue guardado, ahora debes esperar a que la otra persona te de like también! Buena suerte!\");\n                                        // console.log(\"other person don't like you\");\n                                        \n                                    };\n                                    \n                                    \n                                };\n                                \n                                // update users on BD\n                                // console.log(\"logged user updated: \", loggedUser);\n                                // console.log(\"like user updated: \", likeUser);\n\n                                // update logged user\n                                loggedUserRef.update(loggedUser)\n                                .then(res => {\n                                    console.log(\"logged user updated successfully\");\n                                })\n                                .catch(er => {\n                                    console.log(er);\n                                });\n                                \n                                // update like user\n                                likeUserRef.update(likeUser)\n                                .then(res => {\n                                    console.log(\"like user updated successfully\");\n                                })\n                                .catch(er => {\n                                    console.log(er);\n                                });\n                                \n                            });\n                            \n                        }\n                        \n                        // if like already exists\n                        else{\n                            // alert(\"You already liked this person. Must to wait until other person give you like!\");\n                            alert(\"Ya le diste like a esta persona! Ahora debes esperar a que te de like! Buena suerte!\");\n                        };\n                        \n                    });\n                    \n                }\n\n                // it's the same user\n                else {\n                    // alert(\"You can not do like to yourself\");\n                    alert(\"Ups! No puedes darte like a ti mismo!\");\n                };\n\n            };\n\n        });\n\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"center\"\n                                }}\n\n                                elevation={5}\n                            >\n\n                                <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n\n                                    Hola soy {this.state.userName}!\n\n                                </Typography>\n\n                                <Typography variant=\"p\" component=\"body2\" style={{ textAlign: \"center\", }}>\n\n                                    {/* You can give me \"like me\" if I like to you :) If I gave you like too, so we will do match :) and we will be notified, otherwise I will never know you gave me like :), so don't worry about it! */}\n                                    <p>\n                                        Puedes darme \"me gusta\" si es que te gusto :) y si yo también te doy \"me gustas\", entonces haremos match y podremos hablar! \n                                    </p>\n                                    <p>\n                                        Si es que no te doy \"me gustas\", yo nunca sabré que me diste \"me gustas\"! Asi que no te preocupes, nadie sabrá! Solo tú!\n                                    </p> \n\n                                </Typography>\n\n                                {/* like button */}\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\"\n                                    onClick={() => {\n                                        // alert(\"If I give you like too, we will do match, otherwise I will never know you gave me like :)\")\n                                        this.likeToUser();\n                                    }}\n                                >\n                                    <FavoriteBorder\n                                        // margin = {50}\n                                        style = {{\n                                            margin: 4,\n                                        }}\n                                    />\n                                    Me gustas\n                                </Button>\n\n                                <Typography variant=\"p\" component=\"body2\" style={{ textAlign: \"center\", }}>\n\n                                    {/* If you are not logged, click here: */}\n                                    Si no estas registrado, click aquí\n\n                                </Typography>\n                                \n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => {\n                                        // alert(\"Go to register\");\n                                        // this.s\n                                        this.props.history.push('/login');\n                                    }}\n                                >\n                                    <Person\n                                        // margin = {50}\n                                        style={{\n                                            margin: 4,\n                                        }}\n                                    />\n                                    {/* Sign in */}\n                                    Registrarse\n                                </Button>\n\n                                \n                                {\n                                    this.state.userIsLoggedUser &&\n\n                                    <Container\n                                        style={{\n                                            justifyContent: \"center\",\n                                            flexDirection: \"column\",\n                                            display: \"flex\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n\n                                        <p>\n                                            Este botón solo lo puedes ver tú\n                                        </p>\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => {\n\n                                                // copy link to clipboard\n                                                const el = document.createElement('textarea');\n                                                el.value = window.location.href;\n                                                document.body.appendChild(el);\n                                                el.select();\n                                                document.execCommand('copy');\n                                                document.body.removeChild(el);\n\n                                                // user message\n                                                alert(\"Link copiado!\");\n\n                                            }}\n                                        >\n                                            <FileCopy\n                                                // margin = {50}\n                                                style={{\n                                                    margin: 4,\n                                                }}\n                                            />\n\n                                            Copiar este link en mis redes sociales\n\n                                        </Button>\n                                    </Container>\n                                }\n\n                            </Paper>\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default PublicProfile;","/home/leo/Desktop/matchingApp/matching-app/src/index.js",[],["48","49"],"/home/leo/Desktop/matchingApp/matching-app/src/libraries/firebase/firebase.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":31,"column":7,"nodeType":"56","messageId":"57","endLine":31,"endColumn":23},{"ruleId":"58","severity":1,"message":"59","line":98,"column":53,"nodeType":"60","messageId":"61","endLine":98,"endColumn":54,"fix":"62"},{"ruleId":"54","severity":1,"message":"63","line":8,"column":18,"nodeType":"56","messageId":"57","endLine":8,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":77,"column":30,"nodeType":"66","messageId":"67","endLine":77,"endColumn":32},{"ruleId":"64","severity":1,"message":"68","line":111,"column":30,"nodeType":"66","messageId":"67","endLine":111,"endColumn":32},{"ruleId":"50","replacedBy":"69"},{"ruleId":"52","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'matchesWithUsers' is assigned a value but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"73","text":"74"},"'Box' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["71"],["72"],"no-global-assign","no-unsafe-negation",[2416,2438],"\n                    ."]