{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/leo/Desktop/matchingApp/matching-app/src/screens/dashboard/dashboard.screen.js\";\nimport React from \"react\"; // import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// material ui\n\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { Button, Box } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// import LiveTv from '@material-ui/icons/LiveTv';\n\nimport { fs, auth } from \"../../libraries/firebase/firebase\"; // //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n// fake data\n\nconst matchesWithUsers = [{\n  \"userName\": \"Emma Watson\",\n  \"linkToUser\": \"https://www.instagram.com/emmawatson/\"\n}, {\n  \"userName\": \"person 2\",\n  \"linkToUser\": \"https://www.google.com\"\n}];\n\nclass UserDashboard extends React.Component {\n  // constructor\n  constructor(props) {\n    // constructur of parent\n    super(props); // initial states\n\n    this.state = {\n      loading: true,\n      matchesWithUsers: [] // workshopsByCategory: null,\n      // garbagesPerDay: [],\n      // email: \"\",\n      // password: \"\",\n\n    };\n  }\n\n  componentDidMount() {\n    // // temp\n    // this.setState({\n    //     loading: false,\n    //     matchesWithUsers: matchesWithUsers,\n    // });\n    // check if user is logged\n    auth.onAuthStateChanged(user => {\n      if (!user) {\n        // console.log(\"user not logged\");\n        this.props.history.push('/'); // console.log(\"aosjid\");\n      } else {\n        // get number of garbage\n        fs.collection('users').doc(user.uid).get().then(doc_ => {\n          // console.log(\"doc_: \", doc_.data());\n          var matchesWithUsers = [];\n\n          if (doc_.data().matches.length > 0) {\n            // get users data\n            fs.collection(\"users\").where(\"__name__\", \"in\", doc_.data().matches).get().then(snapshotquery => {\n              // iterate over each item\n              snapshotquery.forEach(doc => {\n                // console.log(\"response: \",doc.data());\n                matchesWithUsers.push(doc.data());\n              });\n              console.log(matchesWithUsers); // // update state\n\n              this.setState({\n                matchesWithUsers: matchesWithUsers,\n                loading: false\n              });\n            });\n          } else {\n            // // update state\n            this.setState({\n              loading: false\n            });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    // return method\n    return /*#__PURE__*/_jsxDEV(Container, {\n      style: {// margin: 20,\n        // padding: 20,\n        // backgroundColor: \"red\",\n      },\n      children: !this.state.loading ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            margin: 15,\n            padding: 5\n          },\n          elevation: 5,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => this.props.history.push(\"/publicProfile\"),\n            children: \"See my public profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h6\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Your matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), this.state.matchesWithUsers.map(item => {\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                onClick: () => {\n                  // alert(\"aisod\");\n                  console.log(this); // this.window.props.location.href(item.linkToUser)\n\n                  window.open(item.linkToProfile);\n                },\n                children: \"Let's talk!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 45\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserDashboard;","map":{"version":3,"sources":["/home/leo/Desktop/matchingApp/matching-app/src/screens/dashboard/dashboard.screen.js"],"names":["React","Paper","Container","Button","Box","Typography","CircularProgress","fs","auth","matchesWithUsers","UserDashboard","Component","constructor","props","state","loading","componentDidMount","onAuthStateChanged","user","history","push","collection","doc","uid","get","then","doc_","data","matches","length","where","snapshotquery","forEach","console","log","setState","render","margin","padding","textAlign","map","item","name","window","open","linkToProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// material ui\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport { Button, Box } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// import FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n// import LiveTv from '@material-ui/icons/LiveTv';\n\nimport {\n    fs,\n    auth,\n} from \"../../libraries/firebase/firebase\";\n\n\n// //  component\n// import WorkshopComponent from \"./components/workshop.component\";\n// import OverviewWorkshop from \"./components/overviewWorkshop.component\";\n\n// firebase\n// import { auth } from \"../../config/firebase\";\n// import { fs } from \"../../config/firebase\";\n\n// fake data\nconst matchesWithUsers = [\n    {\n        \"userName\": \"Emma Watson\",\n        \"linkToUser\": \"https://www.instagram.com/emmawatson/\",\n    },\n    {\n        \"userName\": \"person 2\",\n        \"linkToUser\": \"https://www.google.com\",\n    },\n];\n\nclass UserDashboard extends React.Component {\n\n    // constructor\n    constructor(props) {\n\n        // constructur of parent\n        super(props);\n\n        // initial states\n        this.state = {\n            loading: true,\n            matchesWithUsers: []\n            // workshopsByCategory: null,\n            // garbagesPerDay: [],\n            // email: \"\",\n            // password: \"\",\n        }\n\n    }\n\n    componentDidMount() {\n\n        // // temp\n        // this.setState({\n        //     loading: false,\n        //     matchesWithUsers: matchesWithUsers,\n        // });\n\n        // check if user is logged\n        auth.onAuthStateChanged((user) => {\n\n            if (!user) {\n\n                // console.log(\"user not logged\");\n\n                this.props.history.push('/');\n\n                // console.log(\"aosjid\");\n\n            }\n\n            else {\n\n                // get number of garbage\n                fs.collection('users').doc(user.uid).\n                    get().then(doc_ => {\n\n                        // console.log(\"doc_: \", doc_.data());\n\n                        var matchesWithUsers = [];\n\n                        if (doc_.data().matches.length > 0){\n\n                            // get users data\n                            fs.collection(\"users\")\n                            .where(\"__name__\", \"in\", doc_.data().matches)\n                            .get().then(snapshotquery => {\n    \n                                // iterate over each item\n                                snapshotquery.forEach(doc => {\n                                \n                                    // console.log(\"response: \",doc.data());\n    \n                                    matchesWithUsers.push(doc.data());\n    \n                                });\n                                \n                                console.log(matchesWithUsers);\n\n                                // // update state\n                                this.setState({\n        \n                                    matchesWithUsers: matchesWithUsers,\n                                    loading: false,\n        \n                                });\n    \n                            });\n\n                        }\n\n                        else {\n\n                            // // update state\n                            this.setState({\n    \n                                loading: false,\n    \n                            });\n\n                        }\n\n                    });\n\n\n            }\n\n        });\n\n    }\n\n    render() {\n\n        // return method\n        return (\n\n            <Container\n                style={{\n                    // margin: 20,\n                    // padding: 20,\n                    // backgroundColor: \"red\",\n                }}\n            >\n\n                {\n                    !this.state.loading\n\n                        ?\n\n                        <Container>\n\n                            {/* title */}\n                            <Paper\n                                style={{\n                                    margin: 15,\n                                    padding: 5,\n                                }}\n\n                                elevation={5}\n                            >   \n\n                                <Button variant=\"contained\" color=\"primary\"\n                                    onClick={() => this.props.history.push(\"/publicProfile\")}\n                                >\n                                    See my public profile\n                                </Button>\n                                \n                                <Typography variant=\"h6\" component=\"h6\" style={{ textAlign: \"center\", }}>\n\n                                    Your matches\n \n                                </Typography>\n\n                                {/* collection of likes */}\n\n                                {\n                                    this.state.matchesWithUsers.map((item) => {\n\n                                        return (\n                                            <Box>\n\n                                                <Typography variant=\"body2\">\n                                                    \n                                                    {item.name} \n\n                                                </Typography>\n\n                                                <Typography variant=\"body2\"\n                                                    onClick = {\n                                                        () => {\n                                                            // alert(\"aisod\");\n                                                            console.log(this);\n                                                            // this.window.props.location.href(item.linkToUser)\n                                                            window.open(item.linkToProfile);\n                                                        }\n                                                    }\n                                                >\n\n                                                    Let's talk!\n\n                                                </Typography>\n\n                                                {/* <img\n                                                    width={200}\n                                                    height={200}\n                                                    src={item.image}\n                                                /> */}\n\n                                            </Box>\n                                        )\n                                    })\n                                }\n\n                            </Paper>\n\n                        </Container>\n\n                        :\n\n                        <CircularProgress />\n\n                }\n\n            </Container>\n        );\n\n    }\n\n}\n\nexport default UserDashboard;"]},"metadata":{},"sourceType":"module"}